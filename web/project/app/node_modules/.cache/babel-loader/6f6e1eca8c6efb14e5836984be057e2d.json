{"ast":null,"code":"export default {\n  name: \"manager\",\n\n  data() {\n    return {\n      queryInfo: {\n        query: '',\n        // 当前页数\n        pagenum: 1,\n        // 当前每页显示多少条数据\n        pagesize: 2\n      },\n      userList: [],\n      total: 0,\n      addDialogVisible: false,\n      addUserForm: {\n        username: '',\n        password: ''\n      },\n      addUserFormRules: {\n        username: [{\n          required: true,\n          message: '请输入合法的用户名',\n          trigger: 'blur'\n        }, {\n          min: 1,\n          max: 10,\n          message: '用户名的长度在1-10个字符之间',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入合法的密码',\n          trigger: 'blur'\n        }, {\n          min: 1,\n          max: 15,\n          message: '密码的长度在1-15个字符之间',\n          trigger: 'blur'\n        }]\n      },\n\n      created() {\n        this.getUserList();\n      },\n\n      methods: {\n        // 获取用户列表数据\n        async getUserList() {\n          const {\n            data: res\n          } = await this.$http.get('users', {\n            params: this.queryInfo\n          });\n          if (res.meta.status !== 200) return this.$message.error('数据获取失败');\n          this.userList = res.data.users;\n          this.total = res.data.total;\n          console.log(res);\n        },\n\n        // 监听pageSize改变的事件\n        handleSizeChange(newSize) {\n          console.log(newSize);\n          this.queryInfo.pagesize = newSize;\n          this.getUserList();\n        },\n\n        // 监听page页码值改变的事件\n        handleCurrentChange(newPage) {\n          console.log(newPage);\n          this.queryInfo.pagenum = newPage;\n          this.getUserList();\n        },\n\n        // 监听switch开头状态的改变\n        async userStateChange(userInfor) {\n          console.log(userInfor);\n          const {\n            data: res\n          } = await this.$http.put(`users/${userInfor.id}/state/${userInfor.mg_state}`);\n\n          if (res.meta.status !== 200) {\n            userInfor.mg_state = !userInfor.mg_state;\n            return this.$message.error('更新用户失败！');\n          }\n\n          this.$message.success('更新用户成功！');\n        },\n\n        // 监听添加用户对话框的:close关闭事件,清除数据(resetFields)\n        addDialogClosed() {\n          this.$refs.addUserFormRef.resetFields();\n        },\n\n        // 点击按钮，添加用户,validate(预校验)\n        addUser() {\n          this.$refs.addUserFormRef.validate(async valid => {\n            if (!valid) return; // 成功后向api发出添加用户的网络请求\n\n            const {\n              data: res\n            } = await this.$http.post('users', this.addUserForm);\n\n            if (res.meta.status !== 201) {\n              this.$message.error('添加用户失败!');\n            }\n\n            this.$message.success('添加用户成功!'); // 隐藏添加用户的对话框\n\n            this.addDialogVisible = false; // 重新获取用户列表\n\n            this.getUserList();\n          });\n        },\n\n        // 展示编辑用户数据的对话框\n        async showEditDialog(id) {\n          const {\n            data: res\n          } = await this.$http.get('users/' + id);\n          if (res.meta.status !== 200) return this.$message.error('查询失败！');\n          this.editDialogVisible = true;\n          this.editUserForm = res.data;\n        },\n\n        // 监听修改用户对话框关闭事件,resetFields重置数据\n        editDialogClosed() {\n          this.$refs.editUserFormRef.resetFields();\n        },\n\n        // 修改用户信息并发出请求\n        editUserInfo() {\n          this.$refs.editUserFormRef.validate(async valid => {\n            if (!valid) return; // 发出修改用户信息的数据请求\n\n            const {\n              data: res\n            } = await this.$http.put('users/' + this.editUserForm.id, {\n              email: this.editUserForm.email,\n              mobile: this.editUserForm.mobile\n            });\n\n            if (res.meta.status !== 200) {\n              return this.$message.error('更新用户信息失败！');\n            } // 关闭修改信息对话框\n\n\n            this.editDialogVisible = false; // 刷新数据列表\n\n            this.getUserList(); // 提示修改成功\n\n            this.$message.success('更新用户信息成功！');\n          });\n        },\n\n        // 根据Id删除用户\n        async removeUserById(id) {\n          const confirmRes = await this.$confirm('此操作将永久删除该用户, 是否继续?', '提示', {\n            confirmButtonText: '确定',\n            cancelButtonText: '取消',\n            type: 'warning'\n          }).catch(err => err); // 如果用户确认删除，返回confirm\n          // 如果用户取消删除，返回cancel\n\n          if (confirmRes !== 'confirm') {\n            return this.$message.info('已取消删除');\n          }\n\n          const {\n            data: res\n          } = await this.$http.delete('users/' + id);\n\n          if (res.meta.status !== 200) {\n            return this.$message.error('删除用户失败！');\n          }\n\n          this.$message.success('删除用户成功！');\n          this.getUserList();\n        }\n\n      }\n    };\n  },\n\n  methods: {\n    checkadd() {},\n\n    exits() {\n      this.$router.push({\n        path: '/'\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA8JA;EACAA,eADA;;EAEAC;IACA;MACAC;QACAC,SADA;QAEA;QACAC,UAHA;QAIA;QACAC;MALA,CADA;MAQAC,YARA;MASAC,QATA;MAUAC,uBAVA;MAWAC;QACAC,YADA;QAEAC;MAFA,CAXA;MAeAC;QACAF,WACA;UAAAG;UAAAC;UAAAC;QAAA,CADA,EAEA;UACAC,MADA;UAEAC,OAFA;UAGAH,2BAHA;UAIAC;QAJA,CAFA,CADA;QAUAJ,WACA;UAAAE;UAAAC;UAAAC;QAAA,CADA,EAEA;UACAC,MADA;UAEAC,OAFA;UAGAH,0BAHA;UAIAC;QAJA,CAFA;MAVA,CAfA;;MAmCAG;QACA;MACA,CArCA;;MAsCAC;QACA;QACA;UACA;YAAAlB;UAAA;YACAmB;UADA;UAGA;UACA;UACA;UACAC;QACA,CAVA;;QAWA;QACAC;UACAD;UACA;UACA;QACA,CAhBA;;QAiBA;QACAE;UACAF;UACA;UACA;QACA,CAtBA;;QAuBA;QACA;UACAA;UACA;YAAApB;UAAA,yBACA,mDADA;;UAGA;YACAuB;YACA;UACA;;UACA;QACA,CAlCA;;QAmCA;QACAC;UACA;QACA,CAtCA;;QAuCA;QACAC;UACA;YACA,mBADA,CAEA;;YACA;cAAAzB;YAAA;;YACA;cACA;YACA;;YACA,iCAPA,CAQA;;YACA,8BATA,CAUA;;YACA;UACA,CAZA;QAaA,CAtDA;;QAuDA;QACA;UACA;YAAAA;UAAA;UACA;UACA;UACA;QACA,CA7DA;;QA8DA;QACA0B;UACA;QACA,CAjEA;;QAkEA;QACAC;UACA;YACA,mBADA,CAEA;;YACA;cAAA3B;YAAA,yBACA,+BADA,EAEA;cAAA4B;cAAAC;YAAA,CAFA;;YAIA;cACA;YACA,CATA,CAUA;;;YACA,+BAXA,CAYA;;YACA,mBAbA,CAcA;;YACA;UACA,CAhBA;QAiBA,CArFA;;QAsFA;QACA;UACA,uCACA,oBADA,EAEA,IAFA,EAGA;YACAC,uBADA;YAEAC,sBAFA;YAGAC;UAHA,CAHA,EAQAC,KARA,CAQAC,UARA,EADA,CAUA;UACA;;UACA;YACA;UACA;;UACA;YAAAlC;UAAA;;UACA;YACA;UACA;;UACA;UACA;QACA;;MA5GA;IAtCA;EAsJA,CAzJA;;EA0JAkB;IACAiB,YAEA,CAHA;;IAIAC;MACA;QAAAC;MAAA;IACA;;EANA;AA1JA","names":["name","data","queryInfo","query","pagenum","pagesize","userList","total","addDialogVisible","addUserForm","username","password","addUserFormRules","required","message","trigger","min","max","created","methods","params","console","handleSizeChange","handleCurrentChange","userInfor","addDialogClosed","addUser","editDialogClosed","editUserInfo","email","mobile","confirmButtonText","cancelButtonText","type","catch","err","checkadd","exits","path"],"sourceRoot":"src/views","sources":["Manager.vue"],"sourcesContent":["<template>\r\n        <el-container>\r\n  <el-aside width=\"200px\" class=\"managerAside\">\r\n      <img src=\"../assets/th2.png\" alt=\"\" class=\"logo\"/>\r\n      <div class=\"gl2\">\r\n          <el-dropdown>\r\n               <span class=\"el-dropdown-link\">\r\n            用户管理<i class=\"el-icon-arrow-down el-icon--right\"></i>\r\n          </span>\r\n      <el-dropdown-menu slot=\"dropdown\">\r\n          <el-dropdown-item @click.native=\"checkadd()\">用户列表</el-dropdown-item>\r\n  </el-dropdown-menu>\r\n</el-dropdown>\r\n      </div>\r\n      <div class=\"gl\">\r\n      <el-dropdown>\r\n               <span class=\"el-dropdown-link\">\r\n            团队成员<i class=\"el-icon-arrow-down el-icon--right\"></i>\r\n          </span>\r\n      <el-dropdown-menu slot=\"dropdown\">\r\n          <el-dropdown-item>项目经理：解世超</el-dropdown-item>\r\n          <el-dropdown-item>服务端工程师：何毅</el-dropdown-item>\r\n          <el-dropdown-item>服务端工程师：贺思超</el-dropdown-item>\r\n          <el-dropdown-item>客户端工程师：陈泽锋</el-dropdown-item>\r\n          <el-dropdown-item>客户端工程师：蒋涵</el-dropdown-item>\r\n          <el-dropdown-item>数据库工程师：江顺</el-dropdown-item>\r\n  </el-dropdown-menu>\r\n</el-dropdown>\r\n      </div>\r\n  </el-aside>\r\n  <el-container>\r\n    <el-header class=\"managerHead\">\r\n        <i class=\"el-icon-help\">航班延误预测系统</i>\r\n        <div>\r\n            <el-dropdown>\r\n               <span class=\"el-dropdown-link\">\r\n            个人中心</span>\r\n      <el-dropdown-menu slot=\"dropdown\">\r\n          <el-dropdown-item>个人信息</el-dropdown-item>\r\n          <el-dropdown-item @click.native=\"exits\">退出</el-dropdown-item>\r\n  </el-dropdown-menu>\r\n</el-dropdown>\r\n        </div>\r\n    </el-header>\r\n    <el-main class=\"managerMain\">\r\n        <div>\r\n            <!--面包屑导航区域-->\r\n        <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n          <el-breadcrumb-item :to=\"{ path: '/MAIN-INTER' }\" class=\"head-bread\">首页</el-breadcrumb-item>\r\n          <el-breadcrumb-item class=\"head-bread\">用户管理</el-breadcrumb-item>\r\n          <el-breadcrumb-item class=\"head-bread\">用户列表</el-breadcrumb-item>\r\n        </el-breadcrumb>\r\n            <!--卡片视图区域-->\r\n    <el-card class=\"box-card\">\r\n        <el-row :gutter=\"20\">\r\n            <el-col :span=\"8\">\r\n                <el-input placeholder=\"请输入内容\"\r\n                          v-model=\"queryInfo.query\"\r\n                          clearable\r\n                          @clear=\"getUserList\">\r\n                    <el-button\r\n                      slot=\"append\"\r\n                      icon=\"el-icon-search\"\r\n                      @click=\"getUserList\"\r\n                    ></el-button>\r\n                </el-input>\r\n            </el-col>\r\n             <!-- 添加用户 -->\r\n            <el-col :span=\"4\"\r\n          ><el-button type=\"primary\" @click=\"addDialogVisible = true\"\r\n            >添加用户</el-button\r\n          >\r\n          <!-- 添加用户对话框 -->\r\n          <el-dialog\r\n            title=\"添加用户\"\r\n            :visible.sync=\"addDialogVisible\"\r\n            width=\"50%\"\r\n            @close=\"addDialogClosed\"\r\n          >\r\n            <!-- 添加用户内容主体区域 -->\r\n            <el-form\r\n              :model=\"addUserForm\"\r\n              :rules=\"addUserFormRules\"\r\n              ref=\"addUserFormRef\"\r\n              label-width=\"70px\">\r\n              <el-form-item label=\"用户名\" prop=\"username\">\r\n                <el-input v-model=\"addUserForm.username\"></el-input>\r\n              </el-form-item>\r\n              <el-form-item label=\"密码\" prop=\"password\">\r\n                <el-input v-model=\"addUserForm.password\"></el-input>\r\n              </el-form-item>\r\n            </el-form>\r\n            <!-- 添加用户内容底部区域 -->\r\n            <span slot=\"footer\" class=\"dialog-footer\">\r\n              <el-button @click=\"addDialogVisible = false\">取 消</el-button>\r\n              <el-button type=\"primary\" @click=\"addUser\">确 定</el-button>\r\n            </span>\r\n          </el-dialog>\r\n        </el-col>\r\n        </el-row>\r\n        <!-- 用户列表区域 -->\r\n      <!-- border->带边框,stripe->使用带斑马纹的表格,type=\"index\"->索引列-->\r\n      <el-table :data=\"userList\" border stripe>\r\n        <el-table-column type=\"index\"></el-table-column>\r\n        <el-tableColumn label=\"姓名\" prop=\"username\"></el-tableColumn>\r\n        <el-tableColumn label=\"状态\">\r\n          <template slot-scope=\"scope\">\r\n            <el-switch\r\n              v-model=\"scope.row.mg_state\"\r\n              @change=\"userStateChange(scope.row)\"\r\n            ></el-switch>\r\n          </template>\r\n        </el-tableColumn>\r\n        <el-tableColumn label=\"操作\" width=\"180px\">\r\n          <!-- eslint-disable-next-line -->\r\n          <template slot-scope=\"scope\">\r\n            <!-- 修改用户按钮 -->\r\n            <el-button\r\n              type=\"primary\"\r\n              icon=\"el-icon-edit\"\r\n              size=\"mini\"\r\n              @click=\"showEditDialog(scope.row.id)\"></el-button>\r\n\r\n            <!-- 删除用户按钮 -->\r\n            <el-button\r\n              type=\"danger\"\r\n              icon=\"el-icon-delete\"\r\n              size=\"mini\"\r\n              @click=\"removeUserById(scope.row.id)\"\r\n            ></el-button>\r\n            <!-- 分配角色按钮 -->\r\n            <!-- tooltip:提示框,enterable:自动隐藏 -->\r\n            <el-tooltip\r\n              class=\"item\"\r\n              effect=\"dark\"\r\n              content=\"分配角色\"\r\n              placement=\"top\"\r\n              enterable>\r\n              <el-button\r\n                type=\"warning\"\r\n                icon=\"el-icon-setting\"\r\n                size=\"mini\"\r\n              ></el-button> </el-tooltip></template\r\n        ></el-tableColumn>\r\n      </el-table>\r\n\r\n\r\n    </el-card>\r\n        </div>\r\n    </el-main>\r\n      <el-footer class=\"managerFoot\">\r\n          <div class=\"kaifa\">国寄纵队小组开发出品</div>\r\n      </el-footer>\r\n  </el-container>\r\n</el-container>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: \"manager\",\r\n        data() {\r\n            return {\r\n                queryInfo: {\r\n                    query: '',\r\n                    // 当前页数\r\n                    pagenum: 1,\r\n                    // 当前每页显示多少条数据\r\n                    pagesize: 2,\r\n                },\r\n                 userList: [],\r\n                 total: 0,\r\n                 addDialogVisible: false,\r\n                addUserForm: {\r\n                     username: '',\r\n                     password: '',\r\n                },\r\n                addUserFormRules:{\r\n                    username: [\r\n                      { required: true, message: '请输入合法的用户名', trigger: 'blur' },\r\n                      {\r\n                        min: 1,\r\n                        max: 10,\r\n                        message: '用户名的长度在1-10个字符之间',\r\n                        trigger: 'blur',\r\n                      },\r\n                    ],\r\n                    password: [\r\n                      { required: true, message: '请输入合法的密码', trigger: 'blur' },\r\n                      {\r\n                        min: 1,\r\n                        max: 15,\r\n                        message: '密码的长度在1-15个字符之间',\r\n                        trigger: 'blur',\r\n                      },\r\n                    ]\r\n                },\r\n                created() {\r\n                        this.getUserList()\r\n                },\r\n                methods: {\r\n                    // 获取用户列表数据\r\n                    async getUserList() {\r\n                      const { data: res } = await this.$http.get('users', {\r\n                        params: this.queryInfo,\r\n                      })\r\n                      if (res.meta.status !== 200) return this.$message.error('数据获取失败')\r\n                      this.userList = res.data.users\r\n                      this.total = res.data.total\r\n                      console.log(res)\r\n                    },\r\n                    // 监听pageSize改变的事件\r\n                    handleSizeChange(newSize) {\r\n                      console.log(newSize)\r\n                      this.queryInfo.pagesize = newSize\r\n                      this.getUserList()\r\n                    },\r\n                    // 监听page页码值改变的事件\r\n                    handleCurrentChange(newPage) {\r\n                      console.log(newPage)\r\n                      this.queryInfo.pagenum = newPage\r\n                      this.getUserList()\r\n                    },\r\n                    // 监听switch开头状态的改变\r\n                    async userStateChange(userInfor) {\r\n                      console.log(userInfor)\r\n                      const { data: res } = await this.$http.put(\r\n                        `users/${userInfor.id}/state/${userInfor.mg_state}`\r\n                      )\r\n                      if (res.meta.status !== 200) {\r\n                        userInfor.mg_state = !userInfor.mg_state\r\n                        return this.$message.error('更新用户失败！')\r\n                      }\r\n                      this.$message.success('更新用户成功！')\r\n                    },\r\n                    // 监听添加用户对话框的:close关闭事件,清除数据(resetFields)\r\n                    addDialogClosed() {\r\n                      this.$refs.addUserFormRef.resetFields()\r\n                    },\r\n                    // 点击按钮，添加用户,validate(预校验)\r\n                    addUser() {\r\n                      this.$refs.addUserFormRef.validate(async (valid) => {\r\n                        if (!valid) return\r\n                        // 成功后向api发出添加用户的网络请求\r\n                        const { data: res } = await this.$http.post('users', this.addUserForm)\r\n                        if (res.meta.status !== 201) {\r\n                          this.$message.error('添加用户失败!')\r\n                        }\r\n                        this.$message.success('添加用户成功!')\r\n                        // 隐藏添加用户的对话框\r\n                        this.addDialogVisible = false\r\n                        // 重新获取用户列表\r\n                        this.getUserList()\r\n                      })\r\n                    },\r\n                    // 展示编辑用户数据的对话框\r\n                    async showEditDialog(id) {\r\n                      const { data: res } = await this.$http.get('users/' + id)\r\n                      if (res.meta.status !== 200) return this.$message.error('查询失败！')\r\n                      this.editDialogVisible = true\r\n                      this.editUserForm = res.data\r\n                    },\r\n                    // 监听修改用户对话框关闭事件,resetFields重置数据\r\n                    editDialogClosed() {\r\n                      this.$refs.editUserFormRef.resetFields()\r\n                    },\r\n                    // 修改用户信息并发出请求\r\n                    editUserInfo() {\r\n                      this.$refs.editUserFormRef.validate(async (valid) => {\r\n                        if (!valid) return\r\n                        // 发出修改用户信息的数据请求\r\n                        const { data: res } = await this.$http.put(\r\n                          'users/' + this.editUserForm.id,\r\n                          { email: this.editUserForm.email, mobile: this.editUserForm.mobile }\r\n                        )\r\n                        if (res.meta.status !== 200) {\r\n                          return this.$message.error('更新用户信息失败！')\r\n                        }\r\n                        // 关闭修改信息对话框\r\n                        this.editDialogVisible = false\r\n                        // 刷新数据列表\r\n                        this.getUserList()\r\n                        // 提示修改成功\r\n                        this.$message.success('更新用户信息成功！')\r\n                      })\r\n                    },\r\n                    // 根据Id删除用户\r\n                    async removeUserById(id) {\r\n                      const confirmRes = await this.$confirm(\r\n                        '此操作将永久删除该用户, 是否继续?',\r\n                        '提示',\r\n                        {\r\n                          confirmButtonText: '确定',\r\n                          cancelButtonText: '取消',\r\n                          type: 'warning',\r\n                        }\r\n                      ).catch((err) => err)\r\n                      // 如果用户确认删除，返回confirm\r\n                      // 如果用户取消删除，返回cancel\r\n                      if (confirmRes !== 'confirm') {\r\n                        return this.$message.info('已取消删除')\r\n                      }\r\n                      const { data: res } = await this.$http.delete('users/' + id)\r\n                      if (res.meta.status !== 200) {\r\n                        return this.$message.error('删除用户失败！')\r\n                      }\r\n                      this.$message.success('删除用户成功！')\r\n                      this.getUserList()\r\n                    },\r\n\r\n                }\r\n            }\r\n        },\r\n        methods: {\r\n            checkadd(){\r\n\r\n            },\r\n            exits(){\r\n                this.$router.push({path: '/'})\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n     .head-bread{\r\n        position: relative;\r\n         color: #fff;\r\n         font-size: 20px;\r\n         line-height:1.7;\r\n    }\r\n     .el-dropdown-link {\r\n        cursor: pointer;\r\n        color: #fff;\r\n         font-size: 30px;\r\n         line-height:1.7;\r\n      }\r\n      .el-icon-arrow-down {\r\n        font-size: 30px;\r\n      }\r\n     .gl{\r\n        text-align: center;\r\n    }\r\n    .gl2{\r\n        text-align: center;\r\n    }\r\n    .logo{\r\n        max-width:100%;\r\n        height:auto;\r\n    }\r\n    .kaifa{\r\n        margin:0px auto 40px auto;\r\n        text-align: center;\r\n        font-size: 20px;\r\n        line-height:60px;\r\n        color: #fff;\r\n        font-family: \"Helvetica Neue\";\r\n    }\r\n    .el-icon-help{\r\n        text-align: center;\r\n        font-size: 35px;\r\n        color: #fff;\r\n        font-family: \"Helvetica Neue\";\r\n        line-height:1.7;\r\n    }\r\n    .managerHead{\r\n        background: #409EFF;\r\n        display: flex;\r\n        justify-content: space-between;\r\n    }\r\n    .managerAside{\r\n        width: 1000px;\r\n        background: #4169E1;\r\n    }\r\n    .managerMain{\r\n        background: #87CEFA;\r\n        height:800px;\r\n        flex-grow:1;\r\n        background-image: url(\"../assets/bg.jpg\");\r\n        background-size:cover;\r\n        background-repeat: no-repeat;\r\n    }\r\n    .managerFoot{\r\n        background: #409EFF;\r\n    }\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}